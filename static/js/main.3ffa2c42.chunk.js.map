{"version":3,"sources":["components/Filter/Filter.module.css","components/ContactsForm/ContactsForm.module.css","components/ContactList/ContactList.js","components/ContactsForm/ContactsForm.js","components/Filter/Filter.js","App.js","index.js","App.module.css","components/ContactList/ContactList.module.css"],"names":["module","exports","ContacsList","contacts","onDeleteContact","className","s","list","map","id","name","number","item","type","button","onClick","ContactsForm","state","nameInputId","uuidv4","numberInputId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","htmlFor","placeholder","pattern","title","required","autoComplete","onChange","Component","Filter","App","filter","addContact","some","contact","toLowerCase","alert","deleteContact","contactId","prevState","changeFilter","getVisibleContacts","normalizedFilter","includes","localStorage","getItem","parsedContacts","JSON","parse","prevProps","setItem","stringify","visibleContacts","container","ContactList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ffa2c42.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__1EXt3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactsForm_form__3kj4h\",\"label\":\"ContactsForm_label__1b_4V\",\"button\":\"ContactsForm_button__1dnmG\"};","import s from './ContactList.module.css';\nimport PropTypes from 'prop-types';\n\nconst ContacsList = ({ contacts, onDeleteContact }) => (\n  <ul className={s.list}>\n    {contacts.map(({ id, name, number }) => (\n      <li key={id} className={s.item}>\n        <span>\n          {name} : {number}\n        </span>\n        <button\n          type=\"submit\"\n          className={s.button}\n          onClick={() => onDeleteContact(id)}\n        >\n          Delete\n        </button>\n      </li>\n    ))}\n  </ul>\n);\n\nContacsList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContacsList;\n","import { Component } from 'react';\nimport s from './ContactsForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass ContactsForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n\n    this.props.onSubmit(this.state);\n\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <form className={s.form} onSubmit={this.handleSubmit}>\n        <label className={s.label} htmlFor={this.nameInputId}>\n          Name\n          <input\n            type=\"text\"\n            placeholder=\"Enter name\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            autoComplete=\"off\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            id={this.nameInputId}\n          />\n        </label>\n        <label className={s.label} htmlFor={this.numberInputId}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            autoComplete=\"off\"\n            placeholder=\"Enter number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            id={this.numberInputId}\n          />\n        </label>\n\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default ContactsForm;\n","import s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.label}>\n    Find contacts by name\n    <input type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string.isRequired,\n};\n\nexport default Filter;\n","import { Component } from 'react';\nimport s from './App.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport ContactList from './components/ContactList';\nimport ContactsForm from './components/ContactsForm';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = localStorage.getItem('contacts');\n    const parsedContacts = JSON.parse(contacts);\n\n    if (parsedContacts) {\n      this.setState({ contacts: parsedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (\n      this.state.contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\n      )\n    ) {\n      return alert(`${name} is already in contacts`);\n    } else {\n      const contact = {\n        id: uuidv4(),\n        name,\n        number,\n      };\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contact],\n      }));\n    }\n  };\n\n  deleteContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <div className={s.container}>\n        <h1 className={s.title}>Phonebook</h1>\n\n        <ContactsForm onSubmit={this.addContact} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2jS3R\",\"title\":\"App_title__2r75_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2ynl6\",\"item\":\"ContactList_item__mlF3X\",\"button\":\"ContactList_button__3Su4R\"};"],"sourceRoot":""}